{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sony\\\\OneDrive\\\\Desktop\\\\miiiii\\\\bank-management\\\\src\\\\components\\\\pages\\\\Transactions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = ({\n  user,\n  transactions,\n  updateBalance\n}) => {\n  _s();\n  const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\"\n  });\n  const handleTransaction = e => {\n    e.preventDefault();\n    const amount = parseFloat(newTransaction.amount);\n    if (isNaN(amount)) {\n      alert(\"Please enter a valid amount.\");\n      return;\n    }\n    const updatedBalance = user.balance + amount; // Deduct or add based on positive/negative\n    if (updatedBalance < 0) {\n      alert(\"Insufficient balance!\");\n      return;\n    }\n\n    // Update balance and reset transaction form\n    updateBalance(updatedBalance);\n    setNewTransaction({\n      description: \"\",\n      amount: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Balance: $\", user.balance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: newTransaction.description,\n          onChange: e => setNewTransaction({\n            ...newTransaction,\n            description: e.target.value\n          }),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount (negative for withdrawal)\",\n          value: newTransaction.amount,\n          onChange: e => setNewTransaction({\n            ...newTransaction,\n            amount: e.target.value\n          }),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Perform Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-4\",\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: transactions.map((t, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [t.date, \" - \", t.description, \": $\", t.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"c+8xbWwJgjgVDolKNm/8bo4avgE=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Transactions","user","transactions","updateBalance","_s","newTransaction","setNewTransaction","description","amount","handleTransaction","e","preventDefault","parseFloat","isNaN","alert","updatedBalance","balance","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onSubmit","className","type","placeholder","value","onChange","target","map","t","index","date","_c","$RefreshReg$"],"sources":["C:/Users/sony/OneDrive/Desktop/miiiii/bank-management/src/components/pages/Transactions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Transactions = ({ user, transactions, updateBalance }) => {\r\n  const [newTransaction, setNewTransaction] = useState({\r\n    description: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const handleTransaction = (e) => {\r\n    e.preventDefault();\r\n    const amount = parseFloat(newTransaction.amount);\r\n\r\n    if (isNaN(amount)) {\r\n      alert(\"Please enter a valid amount.\");\r\n      return;\r\n    }\r\n\r\n    const updatedBalance = user.balance + amount; // Deduct or add based on positive/negative\r\n    if (updatedBalance < 0) {\r\n      alert(\"Insufficient balance!\");\r\n      return;\r\n    }\r\n\r\n    // Update balance and reset transaction form\r\n    updateBalance(updatedBalance);\r\n    setNewTransaction({ description: \"\", amount: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Transactions</h2>\r\n      <p>Current Balance: ${user.balance.toFixed(2)}</p>\r\n      <form onSubmit={handleTransaction}>\r\n        <div className=\"mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            value={newTransaction.description}\r\n            onChange={(e) =>\r\n              setNewTransaction({ ...newTransaction, description: e.target.value })\r\n            }\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Amount (negative for withdrawal)\"\r\n            value={newTransaction.amount}\r\n            onChange={(e) =>\r\n              setNewTransaction({ ...newTransaction, amount: e.target.value })\r\n            }\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Perform Transaction\r\n        </button>\r\n      </form>\r\n\r\n      <h3 className=\"mt-4\">Transaction History</h3>\r\n      <ul className=\"list-group\">\r\n        {transactions.map((t, index) => (\r\n          <li key={index} className=\"list-group-item\">\r\n            {t.date} - {t.description}: ${t.amount}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}